To integrate the React modal with a PostgreSQL database, we'll follow these steps:

1. **Set up the backend using Node.js and Express to handle the API requests.**
2. **Use `pg` to interact with PostgreSQL.**
3. **Set up the frontend to make API calls to the backend.**

### Backend Setup

First, install the required dependencies for the backend:

```bash
npm install express pg cors body-parser
```

### Project Structure

```
my-app/
├── backend/
│   ├── db.js
│   ├── server.js
├── src/
│   ├── components/
│   │   ├── ModalForm.js
│   │   └── ModalBox.js
│   ├── App.js
│   └── index.js
├── public/
├── package.json
└── README.md
```

### `backend/db.js`

This file will handle the connection to the PostgreSQL database.

```js
const { Pool } = require('pg');

const pool = new Pool({
  user: 'yourusername',
  host: 'localhost',
  database: 'yourdatabase',
  password: 'yourpassword',
  port: 5432,
});

module.exports = pool;
```

### `backend/server.js`

This file will set up the Express server to handle API requests.

```js
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const pool = require('./db');

const app = express();
const port = 5000;

app.use(cors());
app.use(bodyParser.json());

app.post('/api/form', async (req, res) => {
  const { name, email } = req.body;

  try {
    const result = await pool.query(
      'INSERT INTO users (name, email) VALUES ($1, $2) RETURNING *',
      [name, email]
    );
    res.json(result.rows[0]);
  } catch (err) {
    console.error(err.message);
    res.status(500).send('Server error');
  }
});

app.listen(port, () => {
  console.log(`Server running on port ${port}`);
});
```

### Frontend Setup

First, install Axios for making API calls:

```bash
npm install axios
```

### `src/components/ModalForm.js`

This file will manage the state for the modal and handle the form submission.

```jsx
import React, { useState } from 'react';
import { Button, Modal, Backdrop, Fade } from '@mui/material';
import ModalBox from './ModalBox';
import axios from 'axios';

const ModalForm = () => {
  const [open, setOpen] = useState(false);
  const [formData, setFormData] = useState({ name: '', email: '' });

  const handleOpen = () => setOpen(true);
  const handleClose = () => setOpen(false);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async () => {
    try {
      const response = await axios.post('http://localhost:5000/api/form', formData);
      console.log('Form data submitted:', response.data);
      handleClose();
    } catch (error) {
      console.error('Error submitting form data:', error);
    }
  };

  return (
    <div>
      <Button variant="contained" color="primary" onClick={handleOpen}>
        Open Modal
      </Button>
      <Modal
        aria-labelledby="transition-modal-title"
        aria-describedby="transition-modal-description"
        open={open}
        onClose={handleClose}
        closeAfterTransition
        slots={{ backdrop: Backdrop }}
        slotProps={{
          backdrop: {
            timeout: 500,
          },
        }}
      >
        <Fade in={open}>
          <div>
            <ModalBox
              handleClose={handleClose}
              handleChange={handleChange}
              handleSubmit={handleSubmit}
              formData={formData}
            />
          </div>
        </Fade>
      </Modal>
    </div>
  );
};

export default ModalForm;
```

### `src/components/ModalBox.js`

This file will render the modal's content.

```jsx
import React from 'react';
import { Box, TextField, Typography, Button } from '@mui/material';
import { styled } from '@mui/system';

const StyledBox = styled(Box)(({ theme }) => ({
  position: 'absolute',
  top: '50%',
  left: '50%',
  transform: 'translate(-50%, -50%)',
  width: 400,
  bgcolor: 'background.paper',
  border: '2px solid #000',
  boxShadow: 24,
  padding: theme.spacing(4),
  borderRadius: '8px',
  outline: 'none',
}));

const ModalBox = ({ handleClose, handleChange, handleSubmit, formData }) => {
  return (
    <StyledBox>
      <Typography id="transition-modal-title" variant="h6" component="h2">
        Form Modal
      </Typography>
      <TextField
        autoFocus
        margin="dense"
        id="name"
        label="Name"
        name="name"
        type="text"
        fullWidth
        variant="outlined"
        value={formData.name}
        onChange={handleChange}
      />
      <TextField
        margin="dense"
        id="email"
        label="Email Address"
        name="email"
        type="email"
        fullWidth
        variant="outlined"
        value={formData.email}
        onChange={handleChange}
      />
      <Box mt={2}>
        <Button variant="contained" color="primary" onClick={handleSubmit}>
          Submit
        </Button>
        <Button variant="outlined" color="secondary" onClick={handleClose} sx={{ ml: 2 }}>
          Cancel
        </Button>
      </Box>
    </StyledBox>
  );
};

export default ModalBox;
```

### `src/App.js`

This file remains the main entry point for the application, rendering the `ModalForm` component.

```jsx
import React from 'react';
import ModalForm from './components/ModalForm';

function App() {
  return (
    <div>
      <ModalForm />
    </div>
  );
}

export default App;
```

### `src/index.js`

This file will be the entry point for the React application, rendering the `App` component.

```jsx
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);
```

### Running the Application

1. **Start the backend server**:

   ```bash
   node backend/server.js
   ```

2. **Start the React application**:

   ```bash
   npm start
   ```

Now, you have a React application with a modal that submits data to a PostgreSQL database via an Express backend.